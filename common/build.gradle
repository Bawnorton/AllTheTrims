architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/allthetrims.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // mixin addons
    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${rootProject.mixin_extras_version}"))
    implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:${rootProject.mixin_squared_version}"))

    // config
    modImplementation("dev.isxander.yacl:yet-another-config-lib-common:${rootProject.yacl_version}")

    // compats
    modCompileOnly("maven.modrinth:immersive-armors:${rootProject.immersive_armors_version}")

    // jei
    modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}") {
        transitive = false
    }

    // rei
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.rei_version}")

    // emi
    modCompileOnly("dev.emi:emi-xplat-intermediary:${rootProject.emi_version}:api")
    modCompileOnly("dev.emi:emi-xplat-intermediary:${rootProject.emi_version}")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
